{"version":3,"sources":["components/Controls/Controls.module.css","components/Player/Player.module.css","components/LoadingSpinner/LoadingSpinner.module.css","components/Display/Display.module.css","components/LoadingSpinner/LoadingSpinner.js","components/Controls/VideoOption.js","components/Controls/Category.js","components/Controls/Controls.js","redux/entities/videos/selectors.js","redux/player/playerSlice.js","redux/player/selectors.js","containers/ControlsContainer.js","components/Display/Display.js","containers/DisplayContainer.js","components/Player/Player.js","services/videos.js","redux/entities/videos/videosSlice.js","containers/GeneralContainer.js","App.js","redux/entities/entitiesReducer.js","redux/rootReducer.js","redux/store.js","serviceWorker.js","index.js"],"names":["module","exports","LoadingSpinner","className","styles","root","CircularProgress","VideoOption","title","subtitle","description","source","onClick","thumbnail","handleClick","useCallback","ListItem","button","alignItems","ListItemAvatar","Avatar","variant","alt","src","Movie","ListItemText","primary","secondary","slice","AccordionDetails","withStyles","flexDirection","overflow","MuiAccordionDetails","Category","name","videos","onVideoSelected","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","id","map","video","dense","component","sources","thumb","WhiteIconButton","color","MuiIconButton","Controls","play","isPlaying","pause","onVideoClick","onVolumeChange","volume","brightness","onBrightnessChange","contrast","onContrastChange","useState","drawerOpen","setDrawerOpen","toggleDrawer","isOpen","handleVideoClick","controls","classNames","control","playButton","aria-label","Pause","fontSize","PlayArrow","Grid","container","spacing","item","BrightnessLow","xs","Slider","onChange","value","BrightnessHigh","Brightness3","Brightness1","VolumeDown","VolumeUp","List","Drawer","onClose","anchor","open","drawerHeader","Typography","selectVideoText","closeIcon","Close","categories","category","createSelector","require","getVideosState","state","entities","isFetchingVideosSelector","isFetching","videosSelector","error","data","playerSlice","createSlice","initialState","playing","currentVideo","reducers","setVolume","action","payload","setBrightness","setContrast","setCurrentVideo","actions","getPlayerState","player","isVideoPlaying","playerVolumeSelector","playerBrightnessSelector","playerContrastSelector","currentVideoSelector","ControlsContainer","useSelector","dispatch","useDispatch","_","newValue","window","scrollTo","Display","onVideoChanged","videoRef","useRef","sourceRef","useEffect","current","load","style","filter","poster","ref","type","DisplayContainer","Player","getVideos","a","fetch","method","headers","response","ok","json","fetchVideos","createAsyncThunk","videosSlice","extraReducers","pending","fulfilled","rejected","GeneralContainer","App","combineReducers","videosReducer","playerReducer","entitiesReducer","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","concat","logger","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,0BAA0B,gBAAkB,kCAAkC,aAAe,+BAA+B,UAAY,4BAA4B,WAAa,uD,mBCAnPD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,SAAW,2B,mBCAvFD,EAAOC,QAAU,CAAC,KAAO,+B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wB,gLCSVC,EANQ,kBACrB,qBAAKC,UAAWC,IAAOC,KAAvB,SACE,cAACC,EAAA,EAAD,O,uQC4CWC,EA7CK,SAAC,GAOd,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACAC,EACI,EADJA,UAGMC,EAAcC,uBAAY,kBAAMH,EAAQ,CAC5CD,SACAH,QACAE,kBACE,CAACC,IAEL,OACE,eAACK,EAAA,EAAD,CAAUC,QAAM,EAACL,QAASE,EAAaI,WAAW,aAAlD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,SAASC,IAAI,GAAGC,IAAKV,EAArC,SAEE,cAACW,EAAA,EAAD,QAGJ,cAACC,EAAA,EAAD,CACEC,QAASlB,EACTmB,UACE,qCACE,4BAAIlB,IACJ,8BAAIC,EAAYkB,MAAM,EAAG,IAAzB,kBCxBNC,EAAmBC,YAAW,CAClCzB,KAAM,CACJ0B,cAAe,SACfC,SAAU,WAHWF,CAKtBG,KAsCYC,EApCE,SAAC,GAAD,IACfC,EADe,EACfA,KACAC,EAFe,EAEfA,OACAC,EAHe,EAGfA,gBAHe,OAKf,eAACC,EAAA,EAAD,CAAWC,iBAAe,EAA1B,UACE,cAACC,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZC,gBAAc,kBACdC,GAAG,iBAHL,SAKGR,IAEH,cAAC,EAAD,UACGC,EAAOQ,KAAI,SAAAC,GAAK,OACf,cAAC,IAAD,CAAMC,OAAK,EAACC,UAAU,MAAtB,SACE,cAAC,EAAD,CACEvC,MAAOqC,EAAMrC,MACbE,YAAamC,EAAMnC,YACnBD,SAAUoC,EAAMpC,SAChBE,OAAQkC,EAAMG,QAAQ,GACtBpC,QAASyB,EACTxB,UAAWgC,EAAMI,mB,iBC5BvBC,EAAkBpB,YAAW,CACjCzB,KAAM,CACJ8C,MAAO,UAFarB,CAIrBsB,KAwHYC,EArHE,SAAC,GAYX,IAXLjB,EAWI,EAXJA,OACAkB,EAUI,EAVJA,KACAC,EASI,EATJA,UACAC,EAQI,EARJA,MACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,eACAC,EAKI,EALJA,OACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,iBACI,EAEgCC,oBAAS,GAFzC,mBAEGC,EAFH,KAEeC,EAFf,KAIEC,EAAe,kBAAMD,GAAc,SAAAE,GAAM,OAAKA,MAE9CC,EAAmB,SAACxB,GACxBY,EAAaZ,GACbsB,KAGF,OACE,gCACE,sBAAKhE,UAAWC,IAAOkE,SAAvB,UACE,qBAAKnE,UAAWoE,IAAWnE,IAAOoE,QAASpE,IAAOqE,YAAlD,SACE,cAACvB,EAAD,CAAiBwB,aAAW,SAAS9D,QAAS2C,EAAYC,EAAQF,EAAlE,SACGC,EAAY,cAACoB,EAAA,EAAD,CAAOC,SAAS,YAAe,cAACC,EAAA,EAAD,CAAWD,SAAS,gBAGpE,qBAAKzE,UAAWC,IAAOoE,QAAvB,SACE,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,MAEF,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CAAQC,SAAUxB,EAAoByB,MAAO1B,MAE/C,cAACkB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACM,EAAA,EAAD,WAIN,qBAAKpF,UAAWC,IAAOoE,QAAvB,SACE,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,MAEF,cAACV,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CAAQC,SAAUtB,EAAkBuB,MAAOxB,MAE7C,cAACgB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACQ,EAAA,EAAD,WAIN,qBAAKtF,UAAWC,IAAOoE,QAAvB,SACE,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACS,EAAA,EAAD,MAEF,cAACZ,EAAA,EAAD,CAAMG,MAAI,EAACE,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CAAQC,SAAU3B,EAAgB4B,MAAO3B,MAE3C,cAACmB,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAACU,EAAA,EAAD,WAIN,qBAAKxF,UAAWC,IAAOoE,QAAvB,SACE,cAACtB,EAAD,CAAiBtC,QAASuD,EAA1B,SACE,cAACyB,EAAA,EAAD,WAIN,eAACC,EAAA,EAAD,CAAQC,QAAS3B,EAAc4B,OAAO,QAAQC,KAAM/B,EAApD,UACE,sBAAK9D,UAAWC,IAAO6F,aAAvB,UACA,cAACC,EAAA,EAAD,CAAY7E,QAAQ,KAAKlB,UAAWC,IAAO+F,gBAA3C,4BAGA,cAAC,IAAD,CAAevF,QAASuD,EAAchE,UAAWC,IAAOgG,UAAxD,SACE,cAACC,EAAA,EAAD,SAIDjE,EAAOkE,WAAW1D,KAAI,SAAA2D,GAAQ,OAC7B,8BACE,cAAC,EAAD,CACElE,gBAAiBgC,EACjBlC,KAAMoE,EAASpE,KACfC,OAAQmE,EAASnE,UAJXmE,EAASpE,gBCxGrBqE,EAAmBC,EAAQ,IAA3BD,eAEFE,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASxE,QAElCyE,EAA2BL,EACtCE,GACA,SAAAC,GAAK,OAAIA,EAAMG,cAQJC,IAL2BP,EACtCE,GACA,SAAAC,GAAK,OAAIA,EAAMK,SAGaR,EAC5BE,GACA,SAAAC,GAAK,OAAIA,EAAMM,MAAQ,CAAEX,WAAY,QCdjCY,IAAcC,EAFIV,EAAQ,IAAxBU,aAEwB,CAC9BhF,KAAM,SACNiF,aAAc,CACZC,SAAS,EACT1D,OAAQ,EACRC,WAAY,EACZE,SAAU,EACVwD,aAAc,IAEhBC,SAAU,CACRjE,KAAM,SAACqD,GACLA,EAAMU,SAAU,GAElB7D,MAAO,SAACmD,GACNA,EAAMU,SAAU,GAElBG,UAAW,SAACb,EAAOc,GACjBd,EAAMhD,OAAS8D,EAAOC,SAExBC,cAAe,SAAChB,EAAOc,GACrBd,EAAM/C,WAAa6D,EAAOC,SAE5BE,YAAa,SAACjB,EAAOc,GACnBd,EAAM7C,SAAW2D,EAAOC,SAE1BG,gBAAiB,SAAClB,EAAOc,GACvBd,EAAMW,aAAeG,EAAOC,YAKnBR,MAAf,Q,GAQIA,GAAYY,QANdxE,G,GAAAA,KACAE,G,GAAAA,MACAgE,G,GAAAA,UACAG,G,GAAAA,cACAC,G,GAAAA,YACAC,G,GAAAA,gB,SCtCIE,GAAiB,SAAApB,GAAK,OAAIA,EAAMqB,QAEzBC,GAAiBzB,aAC5BuB,IACA,SAAApB,GAAK,OAAIA,EAAMU,WAGJa,GAAuB1B,aAClCuB,IACA,SAAApB,GAAK,OAAIA,EAAMhD,UAGJwE,GAA2B3B,aACtCuB,IACA,SAAApB,GAAK,OAAIA,EAAM/C,cAGJwE,GAAyB5B,aACpCuB,IACA,SAAApB,GAAK,OAAIA,EAAM7C,YAGJuE,GAAuB7B,aAClCuB,IACA,SAAApB,GAAK,OAAIA,EAAMW,gBCiBFgB,GApCW,WAExB,IAAMlG,EAASmG,YAAYxB,IACrBxD,EAAYgF,YAAYN,IACxBtE,EAAS4E,YAAYL,IACrBtE,EAAa2E,YAAYJ,IACzBrE,EAAWyE,YAAYH,IAEvBI,EAAWC,cAWjB,OACE,cAAC,EAAD,CACE9E,OAAiB,IAATA,EACRvB,OAAQA,EACRkB,KAdc,kBAAMkF,EAASlF,OAe7BE,MAde,kBAAMgF,EAAShF,OAe9BE,eAViB,SAACgF,EAAGC,GAAJ,OAAiBH,EAAShB,GAAUmB,EAAW,OAWhEpF,UAAWA,EACXE,aAhBgB,SAACZ,GACnB+F,OAAOC,SAAS,EAAG,GACnBL,EAASX,GAAgBhF,KAevBe,WAAyB,IAAbA,EACZC,mBAbqB,SAAC6E,EAAGC,GAAJ,OAAiBH,EAASb,GAAcgB,EAAW,OAcxE7E,SAAqB,IAAXA,EACVC,iBAdmB,SAAC2E,EAAGC,GAAJ,OAAiBH,EAASZ,GAAYe,EAAW,U,oBC8C3DG,GAlEC,SAAC,GAOV,IANLjG,EAMI,EANJA,MACAU,EAKI,EALJA,UACAI,EAII,EAJJA,OACAoF,EAGI,EAHJA,eACAnF,EAEI,EAFJA,WACAE,EACI,EADJA,SAGMkF,EAAWC,iBAAO,MAClBC,EAAYD,iBAAO,MAwBzB,OAtBAE,qBAAU,WACJ5F,EACFyF,EAASI,QAAQ9F,OAEjB0F,EAASI,QAAQ5F,UAElB,CAACD,IAEJ4F,qBAAU,WACRH,EAASI,QAAQzF,OAASA,IACzB,CAACA,IAEJwF,qBAAU,YACC,OAALtG,QAAK,IAALA,OAAA,EAAAA,EAAOlC,SAAUqI,EAASI,SAAWF,EAAUE,UACjDJ,EAASI,QAAQ5F,QACjB0F,EAAUE,QAAQ7H,IAAMsB,EAAMlC,OAC9BqI,EAASI,QAAQC,OACjBL,EAASI,QAAQ9F,OACjByF,OAED,CAAClG,IAGF,sBAAK1C,UAAWC,KAAOC,KAAvB,UAEE,uBACEiJ,MAAO,CACLC,OAAO,cAAD,OAAgB3F,EAAhB,sBAAwCE,EAAxC,MAER0F,OAAO,sDACPC,IAAKT,EALP,UAOQ,OAALnG,QAAK,IAALA,OAAA,EAAAA,EAAOlC,SAAU,wBAAQ8I,IAAKP,EAAW3H,IAAKsB,EAAMlC,OAAQ+I,KAAK,gBAEpE,oCAAK7G,QAAL,IAAKA,OAAL,EAAKA,EAAOrC,QACZ,mCAAIqC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOnC,kBCvBFiJ,GAtBU,WAEvB,IAAMnB,EAAWC,cAEXlF,EAAYgF,YAAYN,IACxBX,EAAeiB,YAAYF,IAC3B1E,EAAS4E,YAAYL,IACrBtE,EAAa2E,YAAYJ,IACzBrE,EAAWyE,YAAYH,IAI7B,OAAO,cAAC,GAAD,CACLzE,OAAQA,EACRJ,UAAWA,EACXV,MAAOyE,EACPyB,eANiB,kBAAMP,EAASlF,OAOhCM,WAAYA,EACZE,SAAUA,K,oBCRC8F,GAXA,kBACb,sBAAKzJ,UAAWC,KAAOC,KAAvB,UACE,qBAAKF,UAAWC,KAAOyC,MAAvB,SACE,cAAC,GAAD,MAEF,qBAAK1C,UAAWC,KAAOkE,SAAvB,SACE,cAAC,GAAD,U,sCCISuF,GAfA,yCAAG,6BAAAC,EAAA,sEACOC,MAAM,oDAAqD,CAChFC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAJJ,YACVC,EADU,QAQJC,GARI,yCASPD,EAASE,QATF,gCAYTF,GAZS,2CAAH,qD,GCE2BzD,EAAQ,IAA1CU,G,GAAAA,YAEKkD,IAAcC,E,GAFNA,kBAGnB,qBACAT,IA6BaU,GA1BKpD,GAAY,CAC9BhF,KAAM,SACNiF,aAAc,CACZN,YAAY,EACZE,OAAO,EACPC,KAAM,CACJX,WAAY,KAGhBiB,SAAU,GACViD,eAAa,oBACVH,GAAYI,SAAU,SAAC9D,GACtBA,EAAMG,YAAa,KAFV,eAIVuD,GAAYK,WAAY,SAAC/D,EAAOc,GAC/Bd,EAAMG,YAAa,EACnBH,EAAMK,OAAQ,EACdL,EAAMM,KAAOQ,EAAOC,WAPX,eASV2C,GAAYM,UAAW,SAAChE,GACvBA,EAAMK,OAAQ,EACdL,EAAMG,YAAa,KAXV,KAgBf,QCbe8D,GAfU,WAEvB,IAAMpC,EAAWC,cACX3B,EAAayB,YAAY1B,GAI/B,OAFAsC,qBAAU,kBAAMX,EAAS6B,QAAgB,IAErCvD,EACK,cAAC,EAAD,IAGF,cAAC,GAAD,KCZM+D,GAFH,kBAAM,cAAC,GAAD,K,sCCDHC,gBAAgB,CAC7B1I,OAAQ2I,KCAKD,gBAAgB,CAC7B9C,OAAQgD,GACRpE,SAAUqE,KCDGC,6BAAe,CAC5BC,QAASC,GACTC,WAAY,SAACC,GAAD,OAA0BA,IAAuBC,OAAOC,SCKlDC,QACW,cAA7B7C,OAAO8C,SAASC,UAEe,UAA7B/C,OAAO8C,SAASC,UAEhB/C,OAAO8C,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SDqFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e84b0e15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__BY2-d\",\"control\":\"Controls_control__3v2dm\",\"selectVideoText\":\"Controls_selectVideoText__2HjLN\",\"drawerHeader\":\"Controls_drawerHeader__2vAlS\",\"closeIcon\":\"Controls_closeIcon__GoOGU\",\"playButton\":\"Controls_playButton__1FgXM Controls_control__3v2dm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Player_root__2TE88\",\"video\":\"Player_video__1HJnv\",\"controls\":\"Player_controls__33KHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoadingSpinner_root__1z3Rj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Display_root__1FK9i\"};","import React from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport styles from \"./LoadingSpinner.module.css\";\n\nconst LoadingSpinner = () => (\n  <div className={styles.root}>\n    <CircularProgress />\n  </div>\n);\n\nexport default LoadingSpinner;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, ListItem, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { Movie } from '@material-ui/icons';\n\nconst VideoOption = ({\n  title,\n  subtitle,\n  description,\n  source,\n  onClick,\n  thumbnail\n}) => {\n\n  const handleClick = useCallback(() => onClick({\n    source,\n    title,\n    description\n  }), [source])\n\n  return (\n    <ListItem button onClick={handleClick} alignItems=\"flex-start\">\n      <ListItemAvatar>\n        <Avatar variant=\"square\" alt=\"\" src={thumbnail}>\n          {/* Using this icon as fallback */}\n          <Movie />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={title}\n        secondary={\n          <>\n            <p>{subtitle}</p>\n            <p>{description.slice(0, 50)}...</p>\n          </>\n        }\n      />\n    </ListItem>\n  )\n};\n\nVideoOption.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  thumbnail: PropTypes.string.isRequired\n}\n\nexport default VideoOption;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { List, withStyles } from '@material-ui/core';\nimport VideoOption from './VideoOption';\n\nconst AccordionDetails = withStyles({\n  root: {\n    flexDirection: 'column',\n    overflow: 'scroll'\n  }\n})(MuiAccordionDetails);\n\nconst Category = ({\n  name,\n  videos,\n  onVideoSelected\n}) => (\n  <Accordion defaultExpanded>\n    <AccordionSummary\n      expandIcon={<ExpandMoreIcon />}\n      aria-controls=\"panel1a-content\"\n      id=\"panel1a-header\"\n    >\n      {name}\n    </AccordionSummary>\n    <AccordionDetails>\n      {videos.map(video => (\n        <List dense component=\"nav\">\n          <VideoOption\n            title={video.title}\n            description={video.description}\n            subtitle={video.subtitle}\n            source={video.sources[0]}\n            onClick={onVideoSelected}\n            thumbnail={video.thumb}\n          />\n        </List>\n      ))}\n    </AccordionDetails>\n  </Accordion>\n);\n\nCategory.propTypes = {\n  name: PropTypes.string.isRequired,\n  videos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onVideoSelected: PropTypes.func.isRequired\n}\n\nexport default Category;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from '@material-ui/core/Slider';\nimport { Drawer, Grid, Typography, withStyles } from '@material-ui/core';\nimport MuiIconButton from '@material-ui/core/IconButton';\nimport { Brightness1, Brightness3, BrightnessHigh, BrightnessLow, Close, List, Pause, PlayArrow, VolumeDown, VolumeUp } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport Category from './Category';\nimport styles from './Controls.module.css';\n\nconst WhiteIconButton = withStyles({\n  root: {\n    color: 'white'\n  }\n})(MuiIconButton);\n\n\nconst Controls = ({\n  videos,\n  play,\n  isPlaying,\n  pause,\n  onVideoClick,\n  onVolumeChange,\n  volume,\n  brightness,\n  onBrightnessChange,\n  contrast,\n  onContrastChange\n}) => {\n\n  const [drawerOpen, setDrawerOpen] = useState(true);\n\n  const toggleDrawer = () => setDrawerOpen(isOpen => !isOpen);\n\n  const handleVideoClick = (video) => {\n    onVideoClick(video);\n    toggleDrawer();\n  }\n\n  return (\n    <div>\n      <div className={styles.controls}>\n        <div className={classNames(styles.control, styles.playButton)}>\n          <WhiteIconButton aria-label=\"delete\" onClick={isPlaying ? pause : play}>\n            {isPlaying ? <Pause fontSize=\"inherit\" /> : <PlayArrow fontSize=\"inherit\" />}\n          </WhiteIconButton>\n        </div>\n        <div className={styles.control}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <BrightnessLow />\n            </Grid>\n            <Grid item xs>\n              <Slider onChange={onBrightnessChange} value={brightness} />\n            </Grid>\n            <Grid item>\n              <BrightnessHigh />\n            </Grid>\n          </Grid>\n        </div>\n        <div className={styles.control}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Brightness3 />\n            </Grid>\n            <Grid item xs>\n              <Slider onChange={onContrastChange} value={contrast} />\n            </Grid>\n            <Grid item>\n              <Brightness1 />\n            </Grid>\n          </Grid>\n        </div>\n        <div className={styles.control}>\n          <Grid container spacing={2}>\n            <Grid item>\n              <VolumeDown />\n            </Grid>\n            <Grid item xs>\n              <Slider onChange={onVolumeChange} value={volume} />\n            </Grid>\n            <Grid item>\n              <VolumeUp />\n            </Grid>\n          </Grid>\n        </div>\n        <div className={styles.control}>\n          <WhiteIconButton onClick={toggleDrawer}>\n            <List />\n          </WhiteIconButton>\n        </div>\n      </div>\n      <Drawer onClose={toggleDrawer} anchor=\"right\" open={drawerOpen}>\n        <div className={styles.drawerHeader}>\n        <Typography variant=\"h6\" className={styles.selectVideoText}>\n          Select a video\n        </Typography>\n        <MuiIconButton onClick={toggleDrawer} className={styles.closeIcon}>\n          <Close />\n        </MuiIconButton>\n        </div>\n        \n        {videos.categories.map(category => (\n          <div key={category.name}>\n            <Category\n              onVideoSelected={handleVideoClick}\n              name={category.name}\n              videos={category.videos}\n            />\n          </div>\n        ))}\n      </Drawer>\n    </div>\n\n  )\n}\n\nControls.propTypes = {\n  videos: PropTypes.shape({\n    categories: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired,\n  play: PropTypes.func.isRequired,\n  pause: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  onVideoClick: PropTypes.func.isRequired,\n  onVolumeChange: PropTypes.func.isRequired,\n  onBrightnessChange: PropTypes.func.isRequired,\n  onContrastChange: PropTypes.func.isRequired,\n  volume: PropTypes.number.isRequired,\n  brightness: PropTypes.number.isRequired,\n  contrast: PropTypes.number.isRequired\n}\n\nexport default Controls;","const { createSelector } = require(\"@reduxjs/toolkit\");\n\nconst getVideosState = state => state.entities.videos;\n\nexport const isFetchingVideosSelector = createSelector(\n  getVideosState,\n  state => state.isFetching\n)\n\nexport const hasVideosErroredSelector = createSelector(\n  getVideosState,\n  state => state.error\n)\n\nexport const videosSelector = createSelector(\n  getVideosState,\n  state => state.data || { categories: [] }\n)\n","const { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst playerSlice = createSlice({\n  name: 'player',\n  initialState: {\n    playing: false,\n    volume: 1,\n    brightness: 1,\n    contrast: 1,\n    currentVideo: {}\n  },\n  reducers: {\n    play: (state) => {\n      state.playing = true;\n    },\n    pause: (state) => {\n      state.playing = false;\n    },\n    setVolume: (state, action) => {\n      state.volume = action.payload;\n    },\n    setBrightness: (state, action) => {\n      state.brightness = action.payload;\n    },\n    setContrast: (state, action) => {\n      state.contrast = action.payload;\n    },\n    setCurrentVideo: (state, action) => {\n      state.currentVideo = action.payload;\n    }\n  }\n});\n\nexport default playerSlice.reducer;\nexport const {\n  play,\n  pause,\n  setVolume,\n  setBrightness,\n  setContrast,\n  setCurrentVideo\n} = playerSlice.actions;","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getPlayerState = state => state.player;\n\nexport const isVideoPlaying = createSelector(\n  getPlayerState,\n  state => state.playing\n)\n\nexport const playerVolumeSelector = createSelector(\n  getPlayerState,\n  state => state.volume\n)\n\nexport const playerBrightnessSelector = createSelector(\n  getPlayerState,\n  state => state.brightness\n)\n\nexport const playerContrastSelector = createSelector(\n  getPlayerState,\n  state => state.contrast\n)\n\nexport const currentVideoSelector = createSelector(\n  getPlayerState,\n  state => state.currentVideo\n)","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Controls from '../components/Controls/Controls';\nimport { videosSelector } from '../redux/entities/videos/selectors';\nimport { pause, play, setBrightness, setContrast, setCurrentVideo, setVolume } from '../redux/player/playerSlice';\nimport { isVideoPlaying, playerBrightnessSelector, playerContrastSelector, playerVolumeSelector } from '../redux/player/selectors';\n\nconst ControlsContainer = () => {\n\n  const videos = useSelector(videosSelector);\n  const isPlaying = useSelector(isVideoPlaying);\n  const volume = useSelector(playerVolumeSelector);\n  const brightness = useSelector(playerBrightnessSelector);\n  const contrast = useSelector(playerContrastSelector);\n  \n  const dispatch = useDispatch();\n  const playVideo = () => dispatch(play());\n  const pauseVideo = () => dispatch(pause());\n  const selectVideo = (video) => {\n    window.scrollTo(0, 0);\n    dispatch(setCurrentVideo(video))\n  };\n  const changeVolume = (_, newValue) => dispatch(setVolume(newValue / 100));\n  const changeBrightness = (_, newValue) => dispatch(setBrightness(newValue / 100));\n  const changeContrast = (_, newValue) => dispatch(setContrast(newValue / 100));\n\n  return (\n    <Controls\n      volume={volume * 100}\n      videos={videos}\n      play={playVideo}\n      pause={pauseVideo}\n      onVolumeChange={changeVolume}\n      isPlaying={isPlaying}\n      onVideoClick={selectVideo} \n      brightness={brightness * 100}\n      onBrightnessChange={changeBrightness}\n      contrast={contrast * 100}\n      onContrastChange={changeContrast}\n    />\n  )\n}\n\nexport default ControlsContainer;","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Display.module.css';\n\nconst Display = ({\n  video,\n  isPlaying,\n  volume,\n  onVideoChanged,\n  brightness,\n  contrast\n}) => {\n\n  const videoRef = useRef(null);\n  const sourceRef = useRef(null);\n\n  useEffect(() => {\n    if (isPlaying) {\n      videoRef.current.play();\n    } else {\n      videoRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  useEffect(() => {\n    videoRef.current.volume = volume;\n  }, [volume])\n\n  useEffect(() => {\n    if (video?.source && videoRef.current && sourceRef.current) {\n      videoRef.current.pause();\n      sourceRef.current.src = video.source;\n      videoRef.current.load();\n      videoRef.current.play();\n      onVideoChanged();\n    }\n  }, [video]);\n\n  return (\n    <div className={styles.root}>\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n      <video\n        style={{\n          filter: `brightness(${brightness}) contrast(${contrast})`,\n        }}\n        poster=\"https://m.media-amazon.com/images/I/11382C6KyhL.jpg\"\n        ref={videoRef}\n      >\n        {video?.source && <source ref={sourceRef} src={video.source} type=\"video/mp4\" />}\n      </video>\n      <h2>{video?.title}</h2>\n      <p>{video?.description}</p>\n    </div>\n  )\n}\n\n\nDisplay.propTypes = {\n  video: PropTypes.shape({\n    source: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  volume: PropTypes.number.isRequired,\n  onVideoChanged: PropTypes.func.isRequired,\n  brightness: PropTypes.number.isRequired,\n  contrast: PropTypes.number.isRequired\n}\n\nexport default Display;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Display from '../components/Display/Display';\nimport { play } from '../redux/player/playerSlice';\nimport { currentVideoSelector, isVideoPlaying, playerBrightnessSelector, playerContrastSelector, playerVolumeSelector } from '../redux/player/selectors';\n\nconst DisplayContainer = () => {\n\n  const dispatch = useDispatch();\n\n  const isPlaying = useSelector(isVideoPlaying);\n  const currentVideo = useSelector(currentVideoSelector);\n  const volume = useSelector(playerVolumeSelector);\n  const brightness = useSelector(playerBrightnessSelector);\n  const contrast = useSelector(playerContrastSelector);\n\n  const setPlaying = () => dispatch(play());\n\n  return <Display\n    volume={volume}\n    isPlaying={isPlaying}\n    video={currentVideo}\n    onVideoChanged={setPlaying}\n    brightness={brightness}\n    contrast={contrast}\n  />;\n}\n\nexport default DisplayContainer;","import React from 'react';\nimport ControlsContainer from '../../containers/ControlsContainer';\nimport DisplayContainer from '../../containers/DisplayContainer';\nimport styles from './Player.module.css';\n\nconst Player = () => (\n  <div className={styles.root}>\n    <div className={styles.video}>\n      <DisplayContainer />\n    </div>\n    <div className={styles.controls}>\n      <ControlsContainer />\n    </div>\n  </div>\n)\n\nexport default Player;","const getVideos = async () => {\n  const response = await fetch(\"https://api.jsonbin.io/b/60340fc4f1be644b0a63433c\", {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if(response.ok){\n    return response.json();\n  }\n\n  return response;\n}\n\nexport default getVideos;","import getVideos from \"../../../services/videos\";\n\nconst { createSlice, createAsyncThunk } = require(\"@reduxjs/toolkit\");\n\nexport const fetchVideos = createAsyncThunk(\n  'videos/fetchVideos',\n  getVideos\n);\n\nconst videosSlice = createSlice({\n  name: 'videos',\n  initialState: {\n    isFetching: false,\n    error: false,\n    data: {\n      categories: []\n    }\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchVideos.pending]: (state) => {\n      state.isFetching = true;\n    },\n    [fetchVideos.fulfilled]: (state, action) => {\n      state.isFetching = false;\n      state.error = false;\n      state.data = action.payload;\n    },\n    [fetchVideos.rejected]: (state) => {\n      state.error = true;\n      state.isFetching = false;\n    }\n  }\n});\n\nexport default videosSlice.reducer;","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LoadingSpinner from \"../components/LoadingSpinner/LoadingSpinner\";\nimport Player from \"../components/Player/Player\";\nimport { isFetchingVideosSelector } from \"../redux/entities/videos/selectors\";\nimport { fetchVideos } from \"../redux/entities/videos/videosSlice\";\n\nconst GeneralContainer = () => {\n\n  const dispatch = useDispatch();\n  const isFetching = useSelector(isFetchingVideosSelector);\n\n  useEffect(() => dispatch(fetchVideos()), []);\n\n  if (isFetching) {\n    return <LoadingSpinner />\n  }\n\n  return <Player />;\n\n}\n\nexport default GeneralContainer;","import React from 'react';\r\nimport './App.css';\r\nimport GeneralContainer from './containers/GeneralContainer';\r\n\r\nconst App = () => <GeneralContainer />;\r\n\r\nexport default App;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport videosReducer from './videos/videosSlice';\n\nexport default combineReducers({\n  videos: videosReducer\n});","import { combineReducers } from \"@reduxjs/toolkit\";\nimport playerReducer from './player/playerSlice';\nimport entitiesReducer from './entities/entitiesReducer';\n\nexport default combineReducers({\n  player: playerReducer,\n  entities: entitiesReducer\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport rootReducer from './rootReducer';\r\n\r\n// logger should only be added in non-production environments\r\nexport default configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger)\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}